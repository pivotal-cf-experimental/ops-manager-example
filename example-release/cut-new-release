#!/usr/bin/env ruby

require 'rubygems'
require 'erb'

def example_product_version
  ARGV[0] || fail("Must provide the OM version. For example, on the releases/1.9 branch run '#{$0} 1.9'")
end

def next_release_build
  release_file_names = Dir.glob(
    File.expand_path("releases/example-release/example-release-*.release*.yml", __dir__)
  )
  build_versions = release_file_names.map {|file_name| file_name.match(/\.release(\d+).yml\z/)[1].to_i }
  most_recent_build_version = build_versions.max
  "#{example_product_version}.release#{most_recent_build_version+1}"
end

def main
  aws_access_key_id = ENV.fetch('AWS_ACCESS_KEY_ID')
  aws_secret_access_key = ENV.fetch('AWS_SECRET_ACCESS_KEY')
  aws_role_arn = ENV.fetch('AWS_ROLE_ARN')

  private_yml_template = File.expand_path('config/private.yml.erb', __dir__)
  private_yml_path = File.expand_path('config/private.yml', __dir__)
  private_yml = ERB.new(File.read(private_yml_template), nil, '-').result(binding)
  File.write(private_yml_path, private_yml)

  puts "Cutting final release #{next_release_build.inspect}"
  exec("cd #{__dir__}; bosh create-release --final --version #{next_release_build} --force")
end

main

